{*
 * compiler.txt
 * 
 * This file is part of GeomLab
 * Copyright (c) 2008 J. M. Spivey
 * All rights reserved
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, 
 *    this list of conditions and the following disclaimer.      
 * 2. Redistributions in binary form must reproduce the above copyright notice, 
 *    this list of conditions and the following disclaimer in the documentation 
 *    and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products 
 *    derived from this software without specific prior written permission.
 *    
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *}
 
{ LEXICAL TOKENS }

_topdef(#_syntax, _hash());

_update(_syntax, #let, [#let, 0, 0]); 
_update(_syntax, #=, [#=, 3, 4]);
_update(_syntax, #in, [#in, 0, 0]); 
_update(_syntax, #>>, [#>>, 0, 0]); 

let kwd(tok) = _update(_syntax, tok, [tok, 0, 0]) in
  kwd(#define) >> kwd(#else) >> kwd(#function) >> kwd(#if) >>
  kwd(#then) >> kwd(#when) >> kwd(#_) >> kwd(#..) >> kwd(#<-);

_update(_syntax, #+, [#+, 5, 6]);
_update(_syntax, #-, [#-, 5, 6]);
_update(_syntax, #:, [#:, 7, 7]);

define _infixl(tag, p) = _update(_syntax, tag, [#binop, p, p+1]);
define _infixr(tag, p) = _update(_syntax, tag, [#binop, p, p]);

_infixl(#or, 1);
_infixl(#and, 2);
_infixl(#<, 3); _infixl(#<=, 3); _infixl(#<>, 3);
_infixl(#>, 3); _infixl(#>=, 3); 
_infixr(#++, 4);
_infixl(#^, 5);
_infixl(#*, 6); _infixl(#/, 6);

_update(_syntax, #~, [#monop, 0, 0]);
_update(_syntax, #not, [#monop, 0, 0]);
